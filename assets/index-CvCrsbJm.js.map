{"version":3,"file":"index-CvCrsbJm.js","sources":["../../src/core/state.js","../../src/utils/helpers.js","../../src/ui/elements.js","../../src/utils/helperUi.js","../../src/core/comandProcessor.js","../../src/main.js","../../src/core/commandLoader.js"],"sourcesContent":["\"use strict\";\r\n\r\nexport const states = {\r\n  showPressEnterMessage: false,\r\n  showHelpPanel: false,\r\n  showTerminalOutput: false,\r\n  showTerminalContent: false,\r\n  showCommandLinebox: true,\r\n  applicationLoaded: false,\r\n  mantras: [],\r\n  currentCommand: [],\r\n  currentCommandContents: [],\r\n};\r\n","/**\r\n * Debounce utility: delays function execution until after delay ms have passed\r\n * since the last call. Useful for limiting rapid-fire events like input.\r\n * @param {Function} fn - The function to debounce.\r\n * @param {number} delay - Delay in milliseconds.\r\n * @returns {Function} - Debounced function.\r\n */\r\nexport function debounce(fn, delay) {\r\n  let timeout;\r\n  return function (...args) {\r\n    clearTimeout(timeout);\r\n    timeout = setTimeout(() => fn.apply(this, args), delay);\r\n  };\r\n}\r\n\r\n/**\r\n * Adds a data attribute (default: data-command) to the first element node\r\n * in a DocumentFragment. Used to tag top-level elements for command mapping.\r\n * @param {DocumentFragment} fragment - The fragment to modify.\r\n * @param {string} value - The value to set for the data attribute.\r\n * @param {string} key - The data attribute key (default: \"command\").\r\n * @returns {DocumentFragment} - The modified fragment.\r\n */\r\nexport function addDatasetToTopElement(fragment, value, key = \"command\") {\r\n  for (const node of fragment.childNodes) {\r\n    if (node.nodeType === 1) {\r\n      node.dataset[key] = value;\r\n      break;\r\n    }\r\n  }\r\n  return fragment;\r\n}\r\n\r\n/**\r\n * Checks if all commands in the input string are valid.\r\n * Splits input by whitespace, lowercases, and checks each command.\r\n * @param {string} input - The input string containing commands.\r\n * @returns {boolean} - True if all commands are valid, false otherwise.\r\n */\r\nexport function areAllCommandsValid(commands, input) {\r\n  const commandsFilterd = input\r\n    .trim()\r\n    .split(/\\s+/)\r\n    .filter(Boolean)\r\n    .map((cmd) => cmd.toLowerCase());\r\n\r\n  if (commandsFilterd.length === 0) return false;\r\n\r\n  return commandsFilterd.every((cmd) => commandExists(commands, cmd));\r\n}\r\n\r\n/**\r\n * Checks if a single command exists in the global states.mantras.commands object.\r\n * @param {string} command - The command to check.\r\n * @returns {boolean} - True if the command exists, false otherwise.\r\n */\r\nexport function commandExists(commands, command) {\r\n  return commands.hasOwnProperty(command);\r\n}\r\n","export const userInput = document.getElementById(\"userInput\");\r\nexport const terminalContent = document.getElementById(\"terminal-content\");\r\nexport const terminalOutput = document.getElementById(\"terminal-output\");\r\nexport const helpPanel = document.querySelector(\".help-section\");\r\nexport const commandLinebox = document.querySelector(\".command-line\");\r\nexport const terminalOutputWrapper = document.getElementById(\r\n  \"terminal-output-wrapper\"\r\n);\r\n","import { helpPanel, terminalOutput } from \"../ui/elements\";\r\nimport { states } from \"../core/state\";\r\nexport function highlightCommandInHelperPanel() {\r\n  states.currentCommand.forEach((command) => {\r\n    const highlightedCommandEl = helpPanel.querySelector(\r\n      `li[data-command=\"${command}\"]`\r\n    );\r\n    if (highlightedCommandEl) {\r\n      highlightedCommandEl.classList.add(\"highlighted_cmd\");\r\n    } else {\r\n      clearhighlightedCommandInHelperPanel();\r\n    }\r\n  });\r\n}\r\n\r\nexport function clearhighlightedCommandInHelperPanel() {\r\n  const highlightedCmds = helpPanel.querySelectorAll(\".highlighted_cmd\");\r\n  highlightedCmds.forEach((el) => {\r\n    el.classList.remove(\"highlighted_cmd\");\r\n  });\r\n}\r\n\r\nexport function clearCommandContent() {\r\n  terminalOutput.querySelectorAll(\"[data-command]\").forEach((el) => {\r\n    const cmd = el.dataset.command;\r\n    if (!states.currentCommand.includes(cmd)) {\r\n      el.remove();\r\n    }\r\n  });\r\n}\r\n","// Parses input, validates commands, updates state\r\n\r\nimport { states } from \"./state.js\";\r\nimport { areAllCommandsValid, commandExists } from \"../utils/helpers.js\";\r\nimport {\r\n  highlightCommandInHelperPanel,\r\n  clearhighlightedCommandInHelperPanel,\r\n} from \"../utils/helperUi.js\";\r\n\r\nexport function parseCommands(rawInput) {\r\n  return rawInput\r\n    .trim()\r\n    .split(/\\s+/)\r\n    .filter(Boolean)\r\n    .map((cmd) => cmd.toLowerCase());\r\n}\r\n\r\n/**\r\n * Updates states.currentCommand based on valid input commands.\r\n */\r\nexport function updateCurrentCommands(input) {\r\n  const parsed = parseCommands(input);\r\n  const seen = new Set();\r\n\r\n  states.currentCommand = parsed.filter((cmd) => {\r\n    return (\r\n      commandExists(states.mantras.commands, cmd) &&\r\n      !seen.has(cmd) &&\r\n      seen.add(cmd)\r\n    );\r\n  });\r\n\r\n  clearhighlightedCommandInHelperPanel();\r\n  highlightCommandInHelperPanel();\r\n}\r\n\r\n/**\r\n * Checks if all commands are valid after a short delay.\r\n * Used to trigger visual cues like \"Press Enter\".\r\n */\r\nlet validationTimeout;\r\nexport function validateCommandsWithDelay(input, onValidCallback) {\r\n  clearTimeout(validationTimeout);\r\n\r\n  validationTimeout = setTimeout(() => {\r\n    const allValid = areAllCommandsValid(states.mantras.commands, input);\r\n    if (allValid && typeof onValidCallback === \"function\") {\r\n      onValidCallback();\r\n    }\r\n  }, 1000);\r\n}\r\n","\"use strict\";\r\n\r\nimport { states } from \"./core/state\";\r\nimport { loadMantras } from \"./core/commandLoader\";\r\nimport {\r\n  debounce,\r\n  addDatasetToTopElement,\r\n  areAllCommandsValid,\r\n  commandExists,\r\n} from \"./utils/helpers\";\r\nimport {\r\n  updateCurrentCommands,\r\n  validateCommandsWithDelay,\r\n} from \"./core/comandProcessor\";\r\n\r\nimport {\r\n  userInput,\r\n  terminalOutput,\r\n  helpPanel,\r\n  commandLinebox,\r\n} from \"./ui/elements\";\r\n\r\nimport {\r\n  clearhighlightedCommandInHelperPanel,\r\n  highlightCommandInHelperPanel,\r\n  clearCommandContent,\r\n} from \"./utils/helperUi\";\r\n\r\nloadMantras().then((mantras) => {\r\n  if (!mantras) return;\r\n  const ul = document.createElement(\"ul\");\r\n  ul.classList.add(\"space-y-3\", \"text-xs\");\r\n\r\n  for (let [cmd, info] of Object.entries(mantras[\"commands\"])) {\r\n    const li = document.createElement(\"li\");\r\n    li.classList.add(\"flex\", \"flex-col\", \"gap-1\");\r\n    li.dataset.command = cmd;\r\n\r\n    const liDiv = document.createElement(\"div\");\r\n    liDiv.classList.add(\"flex\", \"items-center\", \"gap-2\");\r\n\r\n    const commandSpan = document.createElement(\"span\");\r\n    commandSpan.classList.add(\r\n      \"block\",\r\n      \"text-[#b3b3b3]\",\r\n      \"bg-[#23232a]\",\r\n      \"px-2\",\r\n      \"py-0.5\",\r\n      \"rounded\",\r\n      \"select-none\",\r\n      \"shrink-0\",\r\n      \"whitspace-nowrap\"\r\n    );\r\n    commandSpan.textContent = cmd;\r\n    li.appendChild(liDiv);\r\n\r\n    let commandSpanInfo = document.createElement(\"span\");\r\n    commandSpanInfo.classList.add(\"opacity-40\", \"italic\");\r\n    commandSpanInfo.textContent = info.cmd_info || \"No description available\";\r\n    liDiv.appendChild(commandSpan);\r\n\r\n    liDiv.appendChild(commandSpanInfo);\r\n\r\n    ul.appendChild(li);\r\n  }\r\n  helpPanel.appendChild(ul);\r\n});\r\n\r\nlet typingTimeout;\r\n\r\nuserInput.addEventListener(\"keydown\", handleEnterKey);\r\n\r\nuserInput.addEventListener(\r\n  \"input\",\r\n  debounce((e) => {\r\n    const inputValue = e.target.value.trim();\r\n    updateCurrentCommands(inputValue);\r\n    showPressEnterMessage(false);\r\n    highlightCommandInHelperPanel();\r\n    clearCommandContent();\r\n    validateCommandsWithDelay(inputValue, () => {\r\n      showPressEnterMessage(true);\r\n    });\r\n  }, 300)\r\n);\r\n\r\nfunction handleEnterKey(e) {\r\n  if (e.key === \"Enter\") {\r\n    e.preventDefault();\r\n    const inputValue = e.target.value.trim();\r\n    showPressEnterMessage(false);\r\n    updateCurrentCommands(inputValue);\r\n    showContentBasedOnCommand();\r\n  }\r\n}\r\n\r\nfunction showContentBasedOnCommand() {\r\n  clearCommandContent();\r\n\r\n  if (states.currentCommand.length > 0) {\r\n    states.currentCommand.forEach((command) => {\r\n      if (states.mantras.commands[command]) {\r\n        if (!terminalOutput.querySelector(`[data-command=\"${command}\"]`)) {\r\n          loadTemplate(command).then((template) => {\r\n            const f = htmlStringToFragmentFromTemplate(template);\r\n            const uf = addDatasetToTopElement(f, command);\r\n            const tempDiv = document.createElement(\"div\");\r\n            tempDiv.appendChild(uf);\r\n            const newEl = tempDiv.firstElementChild;\r\n            terminalOutput.appendChild(newEl);\r\n            newEl.scrollIntoView({ behavior: \"smooth\", block: \"start\" });\r\n          });\r\n        }\r\n      }\r\n    });\r\n  } else {\r\n    terminalOutput.innerHTML = \"\";\r\n  }\r\n}\r\n\r\n/**\r\n *Shows or hides the 'Press Enter Message' Element based on the current state and length of character of user input.\r\n */\r\nfunction showPressEnterMessage(show = true) {\r\n  const existingMessage = commandLinebox.querySelector(\"#command_etc\");\r\n  if (show) {\r\n    if (!existingMessage) {\r\n      commandLinebox.insertAdjacentHTML(\r\n        \"beforeend\",\r\n        `<span id=\"command_etc\" class=\"text-xs bg-[#2d2d2d] p-1 absolute right-0 top-[-24px] fade-in\">Press Enter To Get Result!</span>`\r\n      );\r\n    }\r\n  } else {\r\n    if (existingMessage) {\r\n      existingMessage.classList.remove(\"fade-in\");\r\n      existingMessage.classList.add(\"fade-out\");\r\n      existingMessage.addEventListener(\"animationend\", () => {\r\n        existingMessage.remove();\r\n      });\r\n    }\r\n  }\r\n}\r\n\r\n// Higlight the command line input text\r\n\r\nasync function loadTemplate(command) {\r\n  const templatePath = states.mantras.commands[command]?.html;\r\n\r\n  try {\r\n    const response = await fetch(templatePath);\r\n    if (!response.ok) {\r\n      throw new Error(`Template not found: ${templatePath}`);\r\n    }\r\n    return await response.text();\r\n  } catch (err) {\r\n    console.error(\"Error loading template:\", err);\r\n  }\r\n}\r\n\r\nfunction htmlStringToFragmentFromTemplate(htmlString) {\r\n  const temp = document.createElement(\"div\");\r\n  temp.innerHTML = htmlString.trim();\r\n\r\n  const template = temp.querySelector(\"template\");\r\n  if (!template) {\r\n    throw new Error(\"No <template> tag found in HTML string\");\r\n  }\r\n\r\n  return template.content.cloneNode(true);\r\n}\r\n","// Load Commands\r\nimport { states } from \"./state\";\r\n\r\nexport async function loadMantras(mantrasPath = \"./../../mantra/mantras.json\") {\r\n  try {\r\n    const response = await fetch(mantrasPath);\r\n    if (!response.ok) {\r\n      throw new Error(`Failed to load mantras.json from ${mantrasPath}`);\r\n    }\r\n    const data = await response.json();\r\n    states.mantras = data;\r\n    return data || {};\r\n  } catch (err) {\r\n    console.error(\"Error loading mantras.json:\", err);\r\n    return null;\r\n  }\r\n}\r\n"],"names":["states","showPressEnterMessage","showHelpPanel","showTerminalOutput","showTerminalContent","showCommandLinebox","applicationLoaded","mantras","currentCommand","currentCommandContents","commandExists","commands","command","hasOwnProperty","userInput","document","getElementById","terminalOutput","helpPanel","querySelector","commandLinebox","highlightCommandInHelperPanel","forEach","highlightedCommandEl","classList","add","clearhighlightedCommandInHelperPanel","querySelectorAll","el","remove","clearCommandContent","cmd","dataset","includes","updateCurrentCommands","input","parsed","trim","split","filter","Boolean","map","toLowerCase","seen","Set","has","validationTimeout","validateCommandsWithDelay","onValidCallback","clearTimeout","setTimeout","allValid","commandsFilterd","length","every","areAllCommandsValid","show","existingMessage","insertAdjacentHTML","addEventListener","async","mantrasPath","response","fetch","ok","Error","data","json","err","loadMantras","then","ul","createElement","info","Object","entries","li","liDiv","commandSpan","textContent","appendChild","commandSpanInfo","cmd_info","e","key","preventDefault","inputValue","target","value","templatePath","_a","html","text","loadTemplate","template","f","htmlString","temp","innerHTML","content","cloneNode","htmlStringToFragmentFromTemplate","uf","fragment","node","childNodes","nodeType","addDatasetToTopElement","tempDiv","newEl","firstElementChild","scrollIntoView","behavior","block","fn","delay","timeout","args","apply","this","debounce"],"mappings":"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"}